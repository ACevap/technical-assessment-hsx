name: Rollout Technical Assessment HSX

on: workflow_dispatch

env:
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_VAR_ssh_public_key: "${{ secrets.SSH_PUBLIC_KEY }}"

jobs:
  terraform:
    name: "Terraform Plan & Apply"
    runs-on: ubuntu-latest
    outputs:
      ta_hsx_vm_ip: ${{ steps.tfoutputs.outputs.ta_hsx_vm_ip }}
    defaults:
      run:
        working-directory: tf
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.2"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve

      - name: Get Terraform Outputs
        id: tfoutputs
        run: echo "ta_hsx_vm_ip=$(terraform output -raw ta_hsx_vm_ip)" >> "$GITHUB_OUTPUT"

  ansible:
    name: "Ansible Configuration Management of VM"
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      KEYCLOAK_ADMIN_PASSWORD: ${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}
      ta_hsx_vm_ip: ${{ needs.terraform.outputs.ta_hsx_vm_ip }}
    needs: terraform
    defaults:
      run:
        working-directory: ansible
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Ansible
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Write SSH private key for VM access
        run: |
              mkdir -p ~/.ssh
              echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
              chmod 600 ~/.ssh/id_rsa

      - name: Add VM to known_hosts (avoid interactive prompt)
        run: | 
              ssh-keyscan -H ${{ env.ta_hsx_vm_ip }} >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        run: | 
              ansible-playbook \
              -i "${{ env.ta_hsx_vm_ip }}," \
              -u adminuser \
              playbook.yaml \
              --private-key ~/.ssh/id_rsa
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          KEYCLOAK_ADMIN_PASSWORD: ${{ env.KEYCLOAK_ADMIN_PASSWORD }}