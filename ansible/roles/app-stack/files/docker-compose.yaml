services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ta_hsx_net

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HTTP_RELATIVE_PATH: ${KC_HTTP_RELATIVE_PATH}
      KC_PROXY: ${KC_PROXY}
      KC_HTTP_PORT: ${KC_HTTP_PORT}
      KC_HTTP_ENABLED: ${KC_HTTP_ENABLED}
      KC_HTTPS_ENABLED: ${KC_HTTPS_ENABLED}
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - postgres
    networks:
      - ta_hsx_net

#  oauth2-proxy:
#    image: quay.io/oauth2-proxy/oauth2-proxy:latest
#    container_name: oauth2-proxy
#    environment:
#      OAUTH2_PROXY_PROVIDER: ${OAUTH2_PROXY_PROVIDER}
#      OAUTH2_PROXY_CLIENT_ID: ${OAUTH2_PROXY_CLIENT_ID}
#      OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET}
#      OAUTH2_PROXY_UPSTREAMS: ${OAUTH2_PROXY_UPSTREAMS}
#      OAUTH2_PROXY_COOKIE_SECRET: ${OAUTH2_PROXY_COOKIE_SECRET}
#      OAUTH2_PROXY_COOKIE_SECURE: ${OAUTH2_PROXY_COOKIE_SECURE}
#      OAUTH2_PROXY_OIDC_ISSUER_URL: ${OAUTH2_PROXY_OIDC_ISSUER_URL}
#      OAUTH2_PROXY_REDIRECT_URL: ${OAUTH2_PROXY_REDIRECT_URL}
#      OAUTH2_PROXY_HTTP_ADDRESS: ${OAUTH2_PROXY_HTTP_ADDRESS}
#    ports:
#      - "4180:4180"
#    depends_on:
#      - keycloak
#    networks:
#      - ta_hsx_net

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
#    depends_on:
#      - oauth2-proxy
    networks:
       - ta_hsx_net

volumes:
  postgres_data:
    driver: local

networks:
  ta_hsx_net:
    driver: bridge